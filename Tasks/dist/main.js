!function(t){var e={};function s(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=t,s.c=e,s.d=function(t,e,o){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(s.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)s.d(o,n,function(e){return t[e]}.bind(null,n));return o},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=0)}([function(t,e,s){"use strict";s.r(e),function(t){s(1),s(2);var e={model:s(4),view:s(1),controller:s(2)};t.exports=e}.call(this,s(3)(t))},function(t,e,s){"use strict";function o(t){var e="";todo.GetList(),todo.GetId();if(null!=t||""==t)for(var s=0;s<=todo.storage.task.length-1;s++){subtasks="";for(var o=0;o<=t.length-1;o++)if(todo.storage.task[s]==t[o]){if(null!=todo.storage.subtasks[s]&&""!=todo.storage.subtasks[s])if(todo.storage.subtasks[s].length>0)for(var n=0;n<=todo.storage.subtasks[s].length-1;n++)subtasks+=`<li style="text-decoration: none; cursor:pointer" onclick="cheked(event)">  ${todo.storage.subtasks[s][n]}</li><br>`;else subtasks+=`<li style="text-decoration: none; cursor:pointer" onclick="cheked(event)"> ${todo.storage.subtasks[s][n]}</li><br>`;e=e+`\n                <ol class="list"><li>${todo.storage.task[s]}  <img class="removeButton" src="70091.png" width="20px"onClick="remove()"  id="image${todo.storage.id[s]}"><ol style="cursor:pointer" > ${subtasks}</ol>\n               <input id="${todo.storage.id[s]}" class="button_add" type="button" value="+" onclick="ShowSubTask(event)"></input>  </li></ol>       \n               <input style="display:none;" id="subTaskinput${todo.storage.id[s]}" type="text" class="inputSubTask" placeholder="add subtask.."></input>  </li></ol>   \n               <input id="buttonSubTask${todo.storage.id[s]}"  class="AddSubTask" onclick="addSubtask(event)" style="display:none" type="button" value="add"></input>  </li></ol>   \n               `;break}}else for(s=0;s<=todo.storage.task.length-1;s++)if(null!=todo.storage.task[s]){if(subtasks="",null!=todo.storage.subtasks[s]&&todo.storage.subtasks[s].length>0)for(n=0;n<=todo.storage.subtasks[s].length-1;n++)subtasks+=` <li style="text-decoration: none; cursor:pointer" onclick="cheked(event)">${todo.storage.subtasks[s][n]}</li><br>`;e=e+`\n                 <ol class="list"><li>${todo.storage.task[s]}  <img class="removeButton" src="70091.png" width="20px"onClick="remove()"  id="image${todo.storage.id[s]}"> <ol style="cursor:pointer" >${subtasks}</ol>\n                <input id="${todo.storage.id[s]}" class="button_add" type="button" value="+" onclick="ShowSubTask(event)"></input>  </li></ol>       \n                <input style="display:none;" id="subTaskinput${todo.storage.id[s]}" class="inputSubTask" type="text" placeholder="add subtask.."></input>  </li></ol>   \n                <input id="buttonSubTask${todo.storage.id[s]}" class="AddSubTask" onclick="addSubtask(event)" style="display:none" type="button" value="add"></input>  </li></ol>   \n                `}var a=document.getElementById("tasks");document.getElementById("text");a.innerHTML=e}s.r(e),s.d(e,"default",function(){return o}),o()},function(t,e,s){"use strict";function o(t){"none"==(t=event).target.style.textDecoration?(t.target.style="text-decoration: line-through",todo.Check(!0,t.target.innerHTML)):(t.target.style="text-decoration: none",todo.Check(!1,t.target.innerHTML)),console.log()}function n(){todo.DeleteFinished(),realezeView()}function a(t){var e=todo.GetId(),s=document.getElementById("inputAdd"),o=new Tasks(s.value,e);todo.AddTask(o.task,o.id),(new Subtasks).addSubstaks("",e),s.value="",realezeView()}function r(t){var e=event.target.id.match(/\d+/g);todo.DeleteTask(e),realezeView()}function i(){var t=document.getElementById("seach").value;realezeView(todo.search(t))}function u(t){t=event;todo.GetId();var e=document.getElementById(`subTaskinput${t.target.id}`),s=document.getElementById(`buttonSubTask${t.target.id}`);"none"===e.style.display?(e.style.display="block",s.style.display="block",t.target.value="-"):(e.style.display="none",s.style.display="none",t.target.value="+")}function l(t){t=event;todo.GetId();var e=t.target.id.match(/\d+/g),s=document.getElementById(`subTaskinput${e}`).value;document.getElementById(`buttonSubTask${e}`);let o=new Subtasks;o.addSubstaks(s,e),todo.addSubstaks(e,o.subtasks.task),realezeView()}s.r(e),s.d(e,"cheked",function(){return o}),s.d(e,"deleteFinished",function(){return n}),s.d(e,"addTAsk",function(){return a}),s.d(e,"remove",function(){return r}),s.d(e,"seach",function(){return i}),s.d(e,"ShowSubTask",function(){return u}),s.d(e,"addSubtask",function(){return l})},function(t,e){t.exports=function(t){if(!t.webpackPolyfill){var e=Object.create(t);e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),Object.defineProperty(e,"exports",{enumerable:!0}),e.webpackPolyfill=1}return e}},function(t,e,s){"use strict";s.r(e),function(t){s.d(e,"default",function(){return o});class o{constructor(t){if(this.storage={task:[],id:[],subtasks:[],cheked:[]},this.id=-1,this.idForInput=-2,null==localStorage.getItem("Todo")||"{}"==localStorage.getItem("Todo")||'{"storage":{"task":[],"id":[],"subtasks":[],"cheked":[]}}'==localStorage.getItem("Todo"));else{var e=JSON.parse(localStorage.getItem("Todo"));this.storage=e.storage}}GetId(){return this.id}AddTask(t,e){this.id++,this.storage.task.push(t),this.storage.id.push(this.id)}addSubstaks(t,e){for(var s=0;s<=this.storage.task.length-1;s++)this.storage.id[s]==t&&(null!=this.storage.subtasks[s]?this.storage.subtasks[s].push(e):this.storage.subtasks[s]=e)}DeleteFinished(t){for(var e=0;e<=this.storage.subtasks.length-1;e++)for(var s=0;s<=this.storage.subtasks[e].length-1;s++)for(var o=0;o<=this.storage.cheked.length-1;o++)this.storage.subtasks[e][s]==this.storage.cheked[o]&&this.storage.subtasks[e].splice(s,1)}DeleteTask(t){for(var e=0;e<=this.storage.task.length;e++)this.storage.id[e]==t&&(this.storage.task.splice(e,1),this.storage.id.splice(e,1),null!=this.storage.subtasks[e]&&this.storage.subtasks[e].splice(0,this.storage.subtasks[e].length))}search(t){return function(t,e){function s(e){return t.some(function(t){return new RegExp("^"+t).test(e)})}return e.filter(function(t){return t.split(/\s+/).some(s)})}([t],this.storage.task)}Check(t,e){if(!0===t){var s=e;this.storage.cheked.push(s),console.log(this.storage.cheked)}else{s=e.split(">")[1];for(var o=0;o<=this.storage.cheked.length;o++)this.storage.cheked[o]==s&&(this.storage.cheked.splice(o,1),console.log(this.storage.cheked))}}GetList(){let t=[];t.push(this.storage);let e={storage:this.storage};JSON.parse(localStorage.getItem("Todo"));var s=JSON.stringify(e);return localStorage.setItem("Todo",s),JSON.parse(localStorage.getItem(this.storage)),t}}class n{constructor(t,e){this.task=t,this.id=e}getName(){return this.task}}let a=new o;t.exports=a;new class extends n{constructor(t){super(),this.subtasks={task:[],id:[],cheked:!1}}addSubstaks(t,e){this.subtasks.task.push(t),this.subtasks.id=e,this.subtasks.cheked=!1}}}.call(this,s(3)(t))}]);